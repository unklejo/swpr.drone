// Code generated by MockGen. DO NOT EDIT.
// Source: repository/interfaces.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositoryInterface is a mock of RepositoryInterface interface.
type MockRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryInterfaceMockRecorder
}

// MockRepositoryInterfaceMockRecorder is the mock recorder for MockRepositoryInterface.
type MockRepositoryInterfaceMockRecorder struct {
	mock *MockRepositoryInterface
}

// NewMockRepositoryInterface creates a new mock instance.
func NewMockRepositoryInterface(ctrl *gomock.Controller) *MockRepositoryInterface {
	mock := &MockRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryInterface) EXPECT() *MockRepositoryInterfaceMockRecorder {
	return m.recorder
}

// AddTree mocks base method.
func (m *MockRepositoryInterface) AddTree(estateId string, x, y, height int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTree", estateId, x, y, height)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTree indicates an expected call of AddTree.
func (mr *MockRepositoryInterfaceMockRecorder) AddTree(estateId, x, y, height interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTree", reflect.TypeOf((*MockRepositoryInterface)(nil).AddTree), estateId, x, y, height)
}

// CreateEstate mocks base method.
func (m *MockRepositoryInterface) CreateEstate(width, length int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEstate", width, length)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEstate indicates an expected call of CreateEstate.
func (mr *MockRepositoryInterfaceMockRecorder) CreateEstate(width, length interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEstate", reflect.TypeOf((*MockRepositoryInterface)(nil).CreateEstate), width, length)
}

// GetDronePlanByEstateId mocks base method.
func (m *MockRepositoryInterface) GetDronePlanByEstateId(estateId string) (DronePlan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDronePlanByEstateId", estateId)
	ret0, _ := ret[0].(DronePlan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDronePlanByEstateId indicates an expected call of GetDronePlanByEstateId.
func (mr *MockRepositoryInterfaceMockRecorder) GetDronePlanByEstateId(estateId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDronePlanByEstateId", reflect.TypeOf((*MockRepositoryInterface)(nil).GetDronePlanByEstateId), estateId)
}

// GetEstateById mocks base method.
func (m *MockRepositoryInterface) GetEstateById(id string) (Estate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateById", id)
	ret0, _ := ret[0].(Estate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateById indicates an expected call of GetEstateById.
func (mr *MockRepositoryInterfaceMockRecorder) GetEstateById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateById", reflect.TypeOf((*MockRepositoryInterface)(nil).GetEstateById), id)
}

// GetEstateStatsById mocks base method.
func (m *MockRepositoryInterface) GetEstateStatsById(estateId string) (EstateStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateStatsById", estateId)
	ret0, _ := ret[0].(EstateStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateStatsById indicates an expected call of GetEstateStatsById.
func (mr *MockRepositoryInterfaceMockRecorder) GetEstateStatsById(estateId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateStatsById", reflect.TypeOf((*MockRepositoryInterface)(nil).GetEstateStatsById), estateId)
}

// GetTestById mocks base method.
func (m *MockRepositoryInterface) GetTestById(ctx context.Context, input GetTestByIdInput) (GetTestByIdOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestById", ctx, input)
	ret0, _ := ret[0].(GetTestByIdOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestById indicates an expected call of GetTestById.
func (mr *MockRepositoryInterfaceMockRecorder) GetTestById(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestById", reflect.TypeOf((*MockRepositoryInterface)(nil).GetTestById), ctx, input)
}
